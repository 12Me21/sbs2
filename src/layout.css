/****************
 ** All Things **
 ****************/

html {
	white-space: pre-wrap;
	word-break: break-word; /* required for text wrapping to work */
	vertical-align: top; /* if this isn't `top`, inline elements will overflow their containers */
	-webkit-text-size-adjust: none; /* this fixes an ios safari bug where some text is "stuck" at larger sizes after rotating the screen */
}

* {
	margin: 0;
	box-sizing: border-box;
	vertical-align: inherit;
	/* override default browser styles */
	word-break: unset;
	white-space: unset;
	font-family: unset;
	font-variant-ligatures: unset;
	font-size: unset;
}

/* always display images at correct aspect ratio, even if the element is the wrong size */
img {
	object-fit: contain;
}

/* by default, hidden just sets `display: none`, which is overridden by any element which has its display explicitly set (most of them) */
[hidden] {
	display: none !important;
}

.cont {
	display: contents !important;
}

/*****************
 ** Positioning **
 *****************/

html {
	position: fixed;
}

body {
	position: fixed;
	overflow: hidden;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

/* this is being phased out */
.fill {
	width: 100%;
	height: 100%;
}

/**********
 ** Flex **
 **********/
.flex {
	display: block;
	display: flex;
	flex-direction: column;
}
.flex-row {
	display: inline-block;
	display: flex;
}
.flex > *, .flex-row > * {
	flex-shrink: 0;
}
.grow {
	flex-grow: 1;
	flex-shrink: 1;
	flex-basis: 0;
}
.justify-between {
	justify-content: space-between;
}

/*********/
/* all elements with user content, must be tied up */
.pre {
	white-space: pre-wrap;
	unicode-bidi: embed;
}

/* this is really hard to get working */
.ellipsis {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: pre !important;
}
.ellipsis * {
	white-space: pre !important;
}

.rightAlign {
	float: right; /* bad */
}

/*********
 ** Bar **
 *********/
/* the bar system is really gross and should probably be turned into flex now (or grid?)*/

/* These 3 classes handle like 90% of the layout lol */
.bar { /* contains textitems and items */
	display: block;
	overflow: hidden;
	box-sizing: content-box;
	min-height: var(--bar-height);
	line-height: var(--bar-height);
}
.textItem { /* basically anything within a .bar */
	display: inline;
	max-width: 100%;
	min-height: var(--bar-height);
	line-height: var(--bar-height);
}
.item { /* for images and other blocks that can't wrap */
	display: inline-block;
	max-width: 100%;
	height: var(--bar-height);
	line-height: var(--bar-height);
}
.bar .avatar {
	width: var(--bar-height);
}
.bar .iconBg {
	width: 1rem;
	/*margin-right: 0.2rem;*/
}
.rem2-3 .iconBg {
	width: 1.5rem;
}

.rem1-7 {
	--bar-height: 1.7rem;
}
.rem1-5 {
	--bar-height: 1.5rem;
}
.rem2-3 {
	--bar-height: 2.3rem;
}

.linkBar.rem1-5 {
	padding: 0;
}

/*****************
 ** Form Tables **
 *****************/

form-table {
	display: grid;
	grid-template-columns: auto auto;
	grid-auto-flow: row;
}
form-table > .label {
	grid-column: 1;
	grid-row: auto;
}
form-table > .field {
	grid-column: 2;
	grid-row: auto;
}
form-table > .wide {
	grid-column: 1 / 3;
}

/**************
 ** Scroller **
 **************/

scroll-outer {
	overflow-y: scroll;
	/* we probably don't need these ones: */
	display: block;
	height: 100%;
}
scroll-middle {
	display: flex;
	flex-direction: column;
	overflow: hidden;
	min-height: 100%;
	justify-content: flex-end;
}
scroll-inner {
	display: block;
}

/***************
 ** Image Box **
 ***************/
.image-box {
	position: relative;
	overflow: hidden;
}
.image-box > img {
	position: absolute;
	box-sizing: border-box;
	max-width: 100%;
	max-height: 100%;
	/* would be nice to replace all this with object-fit: scale-down; but then we couldn't get a border and etc. */
	left: -10000%;
	right: -10000%;
	top: -10000%;
	bottom: -10000%;
	margin: auto;
}
/*
would be nice to use something like this
but, then we can't add a border to the image
.image-box {
	overflow: hidden;
}

.image-box > img {
	
	// important: .image-box must have some size constraints otherwise it will infinitely big. idk how to fix this
	width: 100%;
	height: 100%;
	border: 1px solid black;
} */

/****************
 ** Slides Box **
 ****************/
.slide-box {
	display: block;
	position: relative;
	overflow: unset; /* ?? */
}
.slide-box > * {
	position: absolute;
	width: 100%;
	height: 100%;
	overflow: auto;
}
.slide-box > :not(.shown) {
	visibility: hidden;
}

/****************
 ** Resize Box **
 ****************/
.resize-box {
	display: flex;
	flex-direction: column;
	--handle-width: 1.2em;
}
.resize-box.row {
	flex-direction: row;
}
.resize-box > * {
	flex-shrink: 0;
}
.resize-box > .grow {
	flex-grow: 1;
	flex-shrink: 1;
	flex-basis: 0;
}
.resize-box > .sized {
	flex-shrink: 1;
}

.resize-box > resize-handle {
	-webkit-touch-callout: none;
	
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	color: var(--databartxtcolor);
	background: var(--databarbgcolor);
	overflow: hidden;
}
.resize-box > resize-handle[data-dragging] {
	cursor: grabbing;
}
.resize-box:not(.row) > resize-handle {
	height: var(--handle-width);
	line-height: var(--handle-width);
	cursor: ns-resize;
}
.resize-box.row > resize-handle {
	width: var(--handle-width);
	cursor: ew-resize;
}
.resize-box:not(.row) > resize-handle::before {
	content: "↕︎";
}
.resize-box.row > resize-handle::before {
	display: block;
	content: "↔︎";
	text-align: center;
}

/*************
 ** Sidebar **
 *************/

/* normal */
@media not all and (max-width: 700px) {
	.closeSidebar {
		display: none !important;
	}
	html:not(.f-sidebar) .sidebar-element {
		display: none !important;
	}
}
/* narrow screen: fullscreen sidebar */
@media all and (max-width: 700px) {
	/* make it fullscreen */
	sidebar-container {
		position: fixed;
		left: 0;
		top: 0;
		bottom: 0;
		right: 0;
		width: unset !important;
	}
	/* this is kinda a hack. basically what we really want is,
for horizontal-split to stop acting like a .resize-box
*/
	horizontal-split {
		contain: size !important; /* and maybe some others */
	}
	/* hide all sidebar elements except the sidebar itself */
	.sidebar-element:not(sidebar-container) {
		display: none;
	}
	
	html.f-mobileSidebar horizontal-split > *:not(sidebar-container) {
		visibility: hidden; /* hide the stuff behind the sidebar so you don't interact with it */
	}
	html:not(.f-mobileSidebar) sidebar-container {
		visibility: hidden;
	}
}

/************************
 ** expanding textarea **
 ************************/

textarea-container {
	display: block;
	box-sizing: content-box;
}
textarea-container > textarea {
	display: block;
	box-sizing: content-box;
	overflow-y: scroll;
	
	resize: none;
	width: 100%;
	
	border: none;
	padding: 0;
	margin: 0;
}

/* honestly we can just apply this to pretty much everything lol */
* {
	contain: content;
}
html {
	contain: none;
}
ul, ol, li, /* bullets render outside */
td, th {  /* border renders outside */
	contain: none;
}

/* use solid backgrounds on elements
 to improve rendering performance + subpixel text usage */

/* sized containers */
.resize-box,
.slide-box, .slide-box > *,
scroll-outer,
sidebar-panel
/* maybe also .resize-box > .grow ? */
{
	contain: strict;
	background: var(--mainbgcolor);
}
/* this element isn't sized based on contents */
.resize-box > .grow {
	contain: strict;
}

/* their scrolling contents */
.resize-box > *,
scroll-outer > *,
scroll-inner, /* necessary, but idk why (well maybe either this OR scroll-middle but at least 1 **/
sidebar-panel > *
{
	background: inherit;
}

/*
from what i've noticed, the most important thing is having a solid BG on
the inner scrolling element (the one which moves when you scroll)
*/

scroll-outer,
.resize-box,
.slide-box,
sidebar-panel
{
/*	background-clip: content-box;*/
/*	background-attachment: fixed;*/
/*	background-color: white;*/
/*doesn't work...*/
}
